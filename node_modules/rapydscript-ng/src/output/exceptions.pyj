# vim:fileencoding=utf-8
# License: BSD Copyright: 2016, Kovid Goyal <kovid at kovidgoyal.net>
from __python__ import hash_literals

from output.statements import print_bracketed

def print_try(self, output):
    output.print("try")
    output.space()
    print_bracketed(self, output)
    if self.bcatch:
        output.space()
        self.bcatch.print(output)

    if self.bfinally:
        output.space()
        self.bfinally.print(output)

def print_catch(self, output):
    output.print("catch")
    output.space()
    output.with_parens(def():
        output.print("ρσ_Exception")
    )
    output.space()
    output.with_block(def():
        output.indent()
        output.spaced('ρσ_last_exception', '=', 'ρσ_Exception'), output.end_statement()
        output.indent()
        no_default = True
        for i, exception in enumerate(self.body):
            if i:
                output.print("else ")

            if exception.errors.length:
                output.print("if")
                output.space()
                output.with_parens(def():
                    for i, err in enumerate(exception.errors):
                        if i:
                            output.newline()
                            output.indent()
                            output.print("||")
                            output.space()

                        output.print("ρσ_Exception")
                        output.space()
                        output.print("instanceof")
                        output.space()
                        if err.name is 'Exception':
                            output.print('Error')
                        else:
                            err.print(output)
                )
                output.space()
            else:
                no_default = False
            print_bracketed(exception, output, True)
            output.space()
        if no_default:
            output.print("else")
            output.space()
            output.with_block(def():
                output.indent()
                output.print("throw")
                output.space()
                output.print("ρσ_Exception")
                output.semicolon()
                output.newline()
            )
        output.newline()
    )

def print_finally(self, output):
    output.print("finally")
    output.space()
    print_bracketed(self, output)

